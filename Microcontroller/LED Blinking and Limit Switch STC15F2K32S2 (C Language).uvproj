#include <STC32S2.h>
#include <string.h>

sbit LED1 = P2^6;  // Pin LED diatur ke P2.6
sbit LED2 = P2^5;  // Pin LED diatur ke P2.5
sbit LED3 = P2^4;  // Pin LED diatur ke P2.4
sbit LED4 = P2^3;  // Pin LED diatur ke P2.3

sbit SWITCH1 = P2^7; // Pin Limit Switch diatur ke P2.7
sbit SWITCH2 = P4^6; // Pin Limit Switch diatur ke P4.6
sbit SWITCH3 = P0^2; // Pin Limit Switch diatur ke P0.2
sbit SWITCH4 = P0^5; // Pin Limit Switch diatur ke P0.5

bit previousSwitchState1 = 1; // Memberhentikan respon yang terus menerus
bit previousSwitchState2 = 1; // Memberhentikan respon yang terus menerus
bit previousSwitchState3 = 1; // Memberhentikan respon yang terus menerus
bit previousSwitchState4 = 1; // Memberhentikan respon yang terus menerus


volatile bit ledBlinking1 = 0; // Flag untuk menandakan apakah LED sedang berkedip
volatile bit ledBlinking2 = 0; // Flag untuk menandakan apakah LED sedang berkedip 
volatile bit ledBlinking3 = 0; // Flag untuk menandakan apakah LED sedang berkedip
volatile bit ledBlinking4 = 0; // Flag untuk menandakan apakah LED sedang berkedip

unsigned int blinkCounter1 = 0; // Membuat LED Blinking
unsigned int blinkCounter2 = 0; // Membuat LED Blinking
unsigned int blinkCounter3 = 0; // Membuat LED Blinking
unsigned int blinkCounter4 = 0; // Membuat LED Blinking

unsigned int blinkDuration1 = 0; // Durasi LED Blinking
unsigned int blinkDuration2 = 0; // Durasi LED Blinking
unsigned int blinkDuration3 = 0; // Durasi LED Blinking
unsigned int blinkDuration4 = 0; // Durasi LED Blinking

volatile bit ledStopped = 0; // Memberhentikan LED Blinking

void Uart1_Init(void) {
    SCON = 0x50;    // 8 bits and variable baudrate
    AUXR |= 0x40;   // Timer clock is 1T mode
    AUXR &= 0xFE;   // UART 1 uses Timer1 as baudrate generator
    TMOD &= 0x0F;   // Set timer work mode
    TL1 = 0xE0;     // Initial timer value
    TH1 = 0xFE;     // Initial timer value
    ET1 = 0;        // Disable Timer1 interrupt
    TR1 = 1;        // Timer1 start run
    IT0 = 1;        // Falling edge trigger
    EX0 = 1;        // Enable INT0 interrupt
    EA = 1;         // Enable global interrupt
}

void sendString(const char *str) {
    while (*str) {
        SBUF = *str++;
        while (!TI);
        TI = 0;
    }
}
void startBlinking1(unsigned int duration) {
    EA = 0;
	  ledStopped = 0;
	  ledBlinking1 = 1;           // Set flag bahwa LED sedang berkedip
    blinkDuration1 = duration;  // Set durasi berkedip
    ET1 = 1;                    // Enable Timer1 interrupt
    EA = 1;                     // Enable global interrupt
	  sendString("Printer Running\r\n");
}

void stopBlinking1() {
    EA = 0;
    ledBlinking1 = 0;
    ledStopped = 1;
    EA = 1;
    sendString("Printer Done\r\n");
}
void startBlinking2(unsigned int duration) {

    EA = 0;
	  ledStopped = 0;
	  ledBlinking2 = 1;           // Set flag bahwa LED sedang berkedip
    blinkDuration2 = duration;  // Set durasi berkedip
    ET1 = 1;                    // Enable Timer1 interrupt
    EA = 1;                     // Enable global interrupt
	  sendString("Card In\r\n");
}
void stopBlinking2() {
    EA = 0;
    ledBlinking2 = 0;
    ledStopped = 1;
    EA = 1;
    sendString("Card Out\r\n");
}

void startBlinking3(unsigned int duration) {
    EA = 0;
	  ledStopped = 0;
	  ledBlinking3 = 1;           // Set flag bahwa LED sedang berkedip
    blinkDuration3 = duration;  // Set durasi berkedip
    ET1 = 1;                    // Enable Timer1 interrupt
    EA = 1;                     // Enable global interrupt
	  sendString("Cash Out 1\r\n");
}
void stopBlinking3() {
    EA = 0;
    ledBlinking3 = 0;
    ledStopped = 1;
    EA = 1;
    sendString("Cash Out 1 Done\r\n");
}
void startBlinking4(unsigned int duration) {
    EA = 0;
	  ledStopped = 0;
	  ledBlinking4 = 1;           // Set flag bahwa LED sedang berkedip
    blinkDuration4 = duration;  // Set durasi berkedip
    ET1 = 1;                    // Enable Timer1 interrupt
    EA = 1;                     // Enable global interrupt
	  sendString("Cash Out 2\r\n");
}
void stopBlinking4() {
    EA = 0;
    ledBlinking4 = 0;
    ledStopped = 1;
    EA = 1;
    sendString("Cash Out 2 Done\r\n");
}
// Interrupt handler untuk timer interrupt 0 (INT0)
void timer1Interrupt() interrupt 3 {
    if (ledBlinking1) {
        blinkCounter1++;
        if (blinkCounter1 >= blinkDuration1) {
            blinkCounter1 = 0;
            LED1 = !LED1;  // Toggle LED jika sedang berkedip
        }
    }

    if (ledBlinking2) {
        blinkCounter2++;
        if (blinkCounter2 >= blinkDuration2) {
            blinkCounter2 = 0;
            LED2 = !LED2;  // Toggle LED1 jika sedang berkedip
        }
    }
		
		if (ledBlinking3) {
        blinkCounter3++;
        if (blinkCounter3 >= blinkDuration3) {
            blinkCounter3 = 0;
            LED3 = !LED3;  // Toggle LED1 jika sedang berkedip
        }
    }
		
		if (ledBlinking4) {
        blinkCounter4++;
        if (blinkCounter4 >= blinkDuration4) {
            blinkCounter4 = 0;
            LED4 = !LED4;  // Toggle LED1 jika sedang berkedip
        }
    }
		if (ledStopped) {
        EA = 0;
        LED1 = 0;
        LED2 = 0;
        LED3 = 0;
        LED4 = 0;
        ledStopped = 0;
        EA = 1;
		}
}
void main() {
    Uart1_Init();   // Inisialisasi konfigurasi perangkat keras UART
    LED1 = 0;       // Pastikan LED mati saat inisialisasi
	  LED2 = 0;
	  LED3 = 0;
	  LED4 = 0;
    EA = 1;         // Enable global interrupt

    while(1) {
        if (RI) {
            char command = SBUF;  // Membaca karakter dari UART
            RI = 0;               // Reset flag receive

            // Mengatur LED sesuai dengan perintah UART
            switch (command) {
                case 'A':
                    startBlinking1(5000);
                    break;
                case 'B':
                    stopBlinking1();
                    break;
								case 'C':
                    startBlinking2(5000);
                    break;
                case 'D':
                    stopBlinking2();
                    break;
								case 'E':
                    startBlinking3(5000);
                    break;
                case 'F':
                    stopBlinking3();
                    break;
								case 'G':
                    startBlinking4(5000);
                    break;
                case 'H':
                    stopBlinking4();
                    break;
                // Tambahkan perintah lain jika diperlukan
                default:
                    break;
            }
        }
			if (SWITCH1 != previousSwitchState1) {
        previousSwitchState1 = SWITCH1;
        if (SWITCH1 == 0) {
            sendString("DOOR SWITCH 1 is OPEN\r\n");
        } else {
            sendString("DOOR SWITCH 1 is CLOSED\r\n");
        }
    }

    if (SWITCH2 != previousSwitchState2) {
        previousSwitchState2 = SWITCH2;
        if (SWITCH2 == 0) {
            sendString("DOOR SWITCH 2 is OOPEN\r\n");
        } else {
            sendString("DOOR SWITCH 2 is CLOSED\r\n");
        }
    }

    if (SWITCH3 != previousSwitchState3) {
        previousSwitchState3 = SWITCH3;
        if (SWITCH3 == 0) {
            sendString("DOOR SWITCH 3 is OPEN\r\n");
        } else {
            sendString("DOOR SWITCH 3 is CLOSED\r\n");
        }
    }

    if (SWITCH4 != previousSwitchState4) {
        previousSwitchState4 = SWITCH4;
        if (SWITCH4 == 0) {
            sendString("DOOR SWITCH 4 is OPEN\r\n");
        } else {
            sendString("DOOR SWITCH 4 is CLOSED\r\n");
        }
			}	
  }
}
